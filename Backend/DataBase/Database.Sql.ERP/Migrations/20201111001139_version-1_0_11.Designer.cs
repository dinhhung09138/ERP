// <auto-generated />
using System;
using Database.Sql.ERP;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Sql.ERP.Migrations
{
    [DbContext(typeof(ERPContext))]
    [Migration("20201111001139_version-1_0_11")]
    partial class version1_0_11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.Certificated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_Certificated");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.CodeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Common_CodeType");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_District");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FilePath")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FilePath128")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FilePath32")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FilePath64")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("MineType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(12, 0)");

                    b.Property<string>("SystemFileName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("WaitForDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Common_File");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_Major");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_MaritalStatus");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.ProfessionalQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_ProfessionalQualification");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_Province");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_School");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Common.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Common_Ward");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.ApproveStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("HR_ApproveStatus");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Commendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Commendation");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowInsurance")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowLeaveDate")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("HR_ContractType");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Discipline");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Education");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvatarFileId")
                        .HasColumnType("int");

                    b.Property<string>("BadgeCardNumber")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("money");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("CurrentDepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentPositionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApplyBadge")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateApplyFingerSign")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("EmployeeWorkingStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FingerSignNumber")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ProbationDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("StartWorkingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WorkingEmail")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WorkingPhone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("HR_Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BadgeCardNumber = "",
                            BasicSalary = 0m,
                            CreateBy = 0,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmployeeCode = "SYSTEM",
                            FingerSignNumber = "",
                            IsActive = false,
                            WorkingEmail = "",
                            WorkingPhone = ""
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CertificateId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HR_EmployeeCertificated");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeCommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ApprovedStatus")
                        .HasColumnType("int");

                    b.Property<int>("CommendationId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<DateTime>("ProposeDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProposerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCommendation");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Facebook")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Github")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LinkedIn")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("PermanentDistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("PermanentProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("PermanentWardId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<string>("Skyper")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TemporaryAddress")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("TemporaryDistrictId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TemporaryProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("TemporaryWardId")
                        .HasColumnType("int");

                    b.Property<string>("Twitter")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Zalo")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("HR_EmployeeContact");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ContractStatusDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ContractStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ContractStatusReason")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ContractStatusSignId")
                        .HasColumnType("int");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeProcessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("money");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("money");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("SignOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EmployeeContract");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeContractStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("money");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("money");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int>("SignId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EmployeeContractStatusHistory");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ApprovedStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CommendationId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<DateTime>("ProposeDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProposerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EmployeeDiscipline");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EducationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<int>("ModelOfStudyId")
                        .HasColumnType("int");

                    b.Property<int>("RankingId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HR_EmployeeEducation");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeIdentification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IdentificationTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_EmployeeIdentification");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademicLevelId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EthnicityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessionalQualificationId")
                        .HasColumnType("int");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_EmployeeInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 0,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmployeeId = 1,
                            FirstName = "Sys",
                            IsActive = false,
                            LastName = "Admin"
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("RelationshipTypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_EmployeeRelationship");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.EmployeeWorkingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("HR_EmployeeWorkingStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Sys",
                            CreateBy = 0,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            IsActive = false,
                            Name = "System",
                            Precedence = 0
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Ethnicity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Ethnicity");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.IdentificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_IdentificationType");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.ModelOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_ModelOfStudy");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Nationality");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Position");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Ranking");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.RelationshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_RelationshipType");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.HR.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("HR_Religion");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.Function", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ParentCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Url")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.HasIndex("ModuleCode");

                    b.ToTable("Security_Function");

                    b.HasData(
                        new
                        {
                            Code = "HR_DASHBOARD",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "DASHBOARD",
                            ParentCode = "",
                            Precedence = 1,
                            Url = "/dashboard"
                        },
                        new
                        {
                            Code = "HR_DEPARTMENT",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "DASHBOARD",
                            ParentCode = "",
                            Precedence = 2,
                            Url = "/department"
                        },
                        new
                        {
                            Code = "HR_TEAM",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "TEAM",
                            ParentCode = "",
                            Precedence = 3,
                            Url = "/team"
                        },
                        new
                        {
                            Code = "HR_POSITION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "POSITION",
                            ParentCode = "",
                            Precedence = 4,
                            Url = "/position"
                        },
                        new
                        {
                            Code = "HR_COMMENDATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "COMMENDATION",
                            ParentCode = "",
                            Precedence = 5,
                            Url = "/commendation"
                        },
                        new
                        {
                            Code = "HR_DISCIPLINE",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "DISCIPLINE",
                            ParentCode = "",
                            Precedence = 6,
                            Url = "/discipline"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "EMPLOYEE",
                            ParentCode = "",
                            Precedence = 6,
                            Url = "/employee"
                        },
                        new
                        {
                            Code = "HR_LEAVE_MNT",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "LEAVE_MANAGEMENT",
                            ParentCode = "",
                            Precedence = 7,
                            Url = "/leave-management"
                        },
                        new
                        {
                            Code = "HR_LEAVE_CALENDAR",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CALENDAR",
                            ParentCode = "HR_LEAVE_MNT",
                            Precedence = 1,
                            Url = "/leave-management/calendar"
                        },
                        new
                        {
                            Code = "HR_LEAVE_SUMMARY",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "SUMMARY",
                            ParentCode = "HR_LEAVE_MNT",
                            Precedence = 2,
                            Url = "/leave-management/summary"
                        },
                        new
                        {
                            Code = "HR_LEAVE_NEW",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "NEW",
                            ParentCode = "HR_LEAVE_MNT",
                            Precedence = 3,
                            Url = "/leave-management/new"
                        },
                        new
                        {
                            Code = "HR_LEAVE_APPROVE_ST",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "APPROVE_STATUS",
                            ParentCode = "HR_LEAVE_MNT",
                            Precedence = 4,
                            Url = "/leave-management/approve-status"
                        },
                        new
                        {
                            Code = "HR_HOLIDAY",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "HOLIDAY",
                            ParentCode = "",
                            Precedence = 8,
                            Url = "/holiday"
                        },
                        new
                        {
                            Code = "HR_CONFIGURATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CONFIGURATION",
                            ParentCode = "",
                            Precedence = 9,
                            Url = "/configuration"
                        },
                        new
                        {
                            Code = "HR_CONF_PROVINCE",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "PROVINCE",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 1,
                            Url = "/configuration/province"
                        },
                        new
                        {
                            Code = "HR_CONF_DISTRICT",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "DISTRICT",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 2,
                            Url = "/configuration/district"
                        },
                        new
                        {
                            Code = "HR_CONF_WARD",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "WARD",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 3,
                            Url = "/configuration/ward"
                        },
                        new
                        {
                            Code = "HR_CONF_MARITAL",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "MARITAL",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 4,
                            Url = "/configuration/marital-status"
                        },
                        new
                        {
                            Code = "HR_CONF_RELIGION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "RELIGION",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 5,
                            Url = "/configuration/religion"
                        },
                        new
                        {
                            Code = "HR_CONF_ETHNICITY",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "ETHNICITY",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 6,
                            Url = "/configuration/ethnicity"
                        },
                        new
                        {
                            Code = "HR_CONF_NATIONALITY",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "NATIONALITY",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 7,
                            Url = "/configuration/nationality"
                        },
                        new
                        {
                            Code = "HR_CONF_IDENTIFICATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "IDENTIFICATION",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 8,
                            Url = "/configuration/identification"
                        },
                        new
                        {
                            Code = "HR_CONF_EDUCATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "EDUCATION",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 9,
                            Url = "/configuration/education"
                        },
                        new
                        {
                            Code = "HR_CONF_QUALIFICATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "QUALIFICATION",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 10,
                            Url = "/configuration/qualification"
                        },
                        new
                        {
                            Code = "HR_CONF_CERTIFICATED",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CERTIFICATED",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 11,
                            Url = "/configuration/certificated"
                        },
                        new
                        {
                            Code = "HR_CONF_SCHOOL",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "SCHOOL",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 12,
                            Url = "/configuration/school"
                        },
                        new
                        {
                            Code = "HR_CONF_MAJOR",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "MAJOR",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 13,
                            Url = "/configuration/major"
                        },
                        new
                        {
                            Code = "HR_CONF_MODEL_OF_STUDY",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "MODEL_OF_STUDY",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 14,
                            Url = "/configuration/model-of-study"
                        },
                        new
                        {
                            Code = "HR_CONF_RANKING",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "RANKING",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 15,
                            Url = "/configuration/ranking"
                        },
                        new
                        {
                            Code = "HR_CONF_RELATIONSHIP",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "RELATIONSHIP_TYPE",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 16,
                            Url = "/configuration/relationship-type"
                        },
                        new
                        {
                            Code = "HR_CONF_CONTRACT",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CONTRACT_TYPE",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 17,
                            Url = "/configuration/contract-type"
                        },
                        new
                        {
                            Code = "HR_CONF_WORKING",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "WORKING_STATUS",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 18,
                            Url = "/configuration/employee-status"
                        },
                        new
                        {
                            Code = "HR_CONF_JOB",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "JOB_TITLE",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 19,
                            Url = "/configuration/job-title"
                        },
                        new
                        {
                            Code = "HR_CONF_APPROVE_ST",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "APPROVE_STATUS",
                            ParentCode = "HR_CONFIGURATION",
                            Precedence = 20,
                            Url = "/configuration/approve-status"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_PERSONAL_INFO",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "PERSONAL_INFO",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 1,
                            Url = "#personalInfo"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_CONTACT",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CONTACT",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 2,
                            Url = "#contact"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_EDUCATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "EDUCATION",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 3,
                            Url = "#education"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_CERTIFICATE",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CERTIFICATION",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 4,
                            Url = "#certification"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_IDENTIFICATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "IDENTIFICATION",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 5,
                            Url = "#identification"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_BANK",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "BANK",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 6,
                            Url = "#bank"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_RELATIONSHIP",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "RELATIONSHIP",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 7,
                            Url = "#relationship"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_CONTRACT",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "CONTRACT",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 8,
                            Url = "#contract"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_COMMENDATION",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "COMMENDATION",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 9,
                            Url = "#commendation"
                        },
                        new
                        {
                            Code = "HR_EMPLOYEE_DISCIPLINE",
                            Icon = "",
                            ModuleCode = "HR",
                            Name = "DISCIPLINE",
                            ParentCode = "HR_EMPLOYEE",
                            Precedence = 10,
                            Url = "#discipline"
                        },
                        new
                        {
                            Code = "SYS_ACCOUNT",
                            Icon = "",
                            ModuleCode = "SYSTEM",
                            Name = "ACCOUNT",
                            ParentCode = "",
                            Precedence = 1,
                            Url = "/account"
                        },
                        new
                        {
                            Code = "SYS_ROLE",
                            Icon = "",
                            ModuleCode = "SYSTEM",
                            Name = "ROLE",
                            ParentCode = "",
                            Precedence = 2,
                            Url = "/role"
                        },
                        new
                        {
                            Code = "SYS_SYSTEM_ERROR",
                            Icon = "",
                            ModuleCode = "SYSTEM",
                            Name = "SYSTEM_ERROR",
                            ParentCode = "",
                            Precedence = 2,
                            Url = "/system-error"
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.FunctionCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FunctionCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsView")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ModuleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("FunctionCode");

                    b.ToTable("Security_FunctionCommand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionName = "GetList",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = true,
                            ModuleName = "System",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Insert",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = false,
                            ModuleName = "System",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 3,
                            ActionName = "ChangeRole",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = false,
                            ModuleName = "System",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 4,
                            ActionName = "ActiveOrDeactivation",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = false,
                            ModuleName = "System",
                            Name = "ACTIVE_OR_DEACTIVATION",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 5,
                            ActionName = "AdminChangepassword",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = false,
                            ModuleName = "System",
                            Name = "ADMIN_CHANGE_PASSWORD",
                            Precedence = 5
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "UserChangepassword",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = false,
                            ModuleName = "System",
                            Name = "USER_CHANGE_PASSWORD",
                            Precedence = 6
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "Delete",
                            ControllerName = "User",
                            FunctionCode = "SYS_ACCOUNT",
                            IsView = false,
                            ModuleName = "System",
                            Name = "DELETE",
                            Precedence = 7
                        },
                        new
                        {
                            Id = 8,
                            ActionName = "GetList",
                            ControllerName = "Role",
                            FunctionCode = "SYS_ROLE",
                            IsView = true,
                            ModuleName = "System",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 9,
                            ActionName = "Insert",
                            ControllerName = "Role",
                            FunctionCode = "SYS_ROLE",
                            IsView = false,
                            ModuleName = "System",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 10,
                            ActionName = "Update",
                            ControllerName = "Role",
                            FunctionCode = "SYS_ROLE",
                            IsView = false,
                            ModuleName = "System",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 11,
                            ActionName = "Delete",
                            ControllerName = "Role",
                            FunctionCode = "SYS_ROLE",
                            IsView = false,
                            ModuleName = "System",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 12,
                            ActionName = "GetList",
                            ControllerName = "Department",
                            FunctionCode = "HR_DEPARTMENT",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 13,
                            ActionName = "Insert",
                            ControllerName = "Department",
                            FunctionCode = "HR_DEPARTMENT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 14,
                            ActionName = "Update",
                            ControllerName = "Department",
                            FunctionCode = "HR_DEPARTMENT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 15,
                            ActionName = "Delete",
                            ControllerName = "Department",
                            FunctionCode = "HR_DEPARTMENT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 16,
                            ActionName = "GetList",
                            ControllerName = "Team",
                            FunctionCode = "HR_TEAM",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 17,
                            ActionName = "Insert",
                            ControllerName = "Team",
                            FunctionCode = "HR_TEAM",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 18,
                            ActionName = "Update",
                            ControllerName = "Team",
                            FunctionCode = "HR_TEAM",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 19,
                            ActionName = "Delete",
                            ControllerName = "Team",
                            FunctionCode = "HR_TEAM",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 20,
                            ActionName = "GetList",
                            ControllerName = "Position",
                            FunctionCode = "HR_POSITION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 21,
                            ActionName = "Insert",
                            ControllerName = "Position",
                            FunctionCode = "HR_POSITION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 22,
                            ActionName = "Update",
                            ControllerName = "Position",
                            FunctionCode = "HR_POSITION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 23,
                            ActionName = "Delete",
                            ControllerName = "Position",
                            FunctionCode = "HR_POSITION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 24,
                            ActionName = "GetList",
                            ControllerName = "Commendation",
                            FunctionCode = "HR_COMMENDATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 25,
                            ActionName = "Insert",
                            ControllerName = "Commendation",
                            FunctionCode = "HR_COMMENDATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 26,
                            ActionName = "Update",
                            ControllerName = "Commendation",
                            FunctionCode = "HR_COMMENDATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 27,
                            ActionName = "Delete",
                            ControllerName = "Commendation",
                            FunctionCode = "HR_COMMENDATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 28,
                            ActionName = "GetList",
                            ControllerName = "Discipline",
                            FunctionCode = "HR_DISCIPLINE",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 29,
                            ActionName = "Insert",
                            ControllerName = "Discipline",
                            FunctionCode = "HR_DISCIPLINE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 30,
                            ActionName = "Update",
                            ControllerName = "Discipline",
                            FunctionCode = "HR_DISCIPLINE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 31,
                            ActionName = "Delete",
                            ControllerName = "Discipline",
                            FunctionCode = "HR_DISCIPLINE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 32,
                            ActionName = "GetList",
                            ControllerName = "Province",
                            FunctionCode = "HR_CONF_PROVINCE",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 33,
                            ActionName = "Insert",
                            ControllerName = "Province",
                            FunctionCode = "HR_CONF_PROVINCE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 34,
                            ActionName = "Update",
                            ControllerName = "Province",
                            FunctionCode = "HR_CONF_PROVINCE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 35,
                            ActionName = "Delete",
                            ControllerName = "Province",
                            FunctionCode = "HR_CONF_PROVINCE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 36,
                            ActionName = "GetList",
                            ControllerName = "District",
                            FunctionCode = "HR_CONF_DISTRICT",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 37,
                            ActionName = "Insert",
                            ControllerName = "District",
                            FunctionCode = "HR_CONF_DISTRICT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 38,
                            ActionName = "Update",
                            ControllerName = "District",
                            FunctionCode = "HR_CONF_DISTRICT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 39,
                            ActionName = "Delete",
                            ControllerName = "District",
                            FunctionCode = "HR_CONF_DISTRICT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 40,
                            ActionName = "GetList",
                            ControllerName = "Ward",
                            FunctionCode = "HR_CONF_WARD",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 41,
                            ActionName = "Insert",
                            ControllerName = "Ward",
                            FunctionCode = "HR_CONF_WARD",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 42,
                            ActionName = "Update",
                            ControllerName = "Ward",
                            FunctionCode = "HR_CONF_WARD",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 43,
                            ActionName = "Delete",
                            ControllerName = "Ward",
                            FunctionCode = "HR_CONF_WARD",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 44,
                            ActionName = "GetList",
                            ControllerName = "Religion",
                            FunctionCode = "HR_CONF_RELIGION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 45,
                            ActionName = "Insert",
                            ControllerName = "Religion",
                            FunctionCode = "HR_CONF_RELIGION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 46,
                            ActionName = "Update",
                            ControllerName = "Religion",
                            FunctionCode = "HR_CONF_RELIGION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 47,
                            ActionName = "Delete",
                            ControllerName = "Religion",
                            FunctionCode = "HR_CONF_RELIGION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 48,
                            ActionName = "GetList",
                            ControllerName = "Ethnicity",
                            FunctionCode = "HR_CONF_ETHNICITY",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 49,
                            ActionName = "Insert",
                            ControllerName = "Ethnicity",
                            FunctionCode = "HR_CONF_ETHNICITY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 50,
                            ActionName = "Update",
                            ControllerName = "Ethnicity",
                            FunctionCode = "HR_CONF_ETHNICITY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 51,
                            ActionName = "Delete",
                            ControllerName = "Ethnicity",
                            FunctionCode = "HR_CONF_ETHNICITY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 52,
                            ActionName = "GetList",
                            ControllerName = "Nationality",
                            FunctionCode = "HR_CONF_NATIONALITY",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 53,
                            ActionName = "Insert",
                            ControllerName = "Nationality",
                            FunctionCode = "HR_CONF_NATIONALITY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 54,
                            ActionName = "Update",
                            ControllerName = "Nationality",
                            FunctionCode = "HR_CONF_NATIONALITY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 55,
                            ActionName = "Delete",
                            ControllerName = "Nationality",
                            FunctionCode = "HR_CONF_NATIONALITY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 92,
                            ActionName = "GetList",
                            ControllerName = "IdentificationType",
                            FunctionCode = "HR_CONF_IDENTIFICATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 93,
                            ActionName = "Insert",
                            ControllerName = "IdentificationType",
                            FunctionCode = "HR_CONF_IDENTIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 94,
                            ActionName = "Update",
                            ControllerName = "IdentificationType",
                            FunctionCode = "HR_CONF_IDENTIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 95,
                            ActionName = "Delete",
                            ControllerName = "IdentificationType",
                            FunctionCode = "HR_CONF_IDENTIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 56,
                            ActionName = "GetList",
                            ControllerName = "Education",
                            FunctionCode = "HR_CONF_EDUCATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 57,
                            ActionName = "Insert",
                            ControllerName = "Education",
                            FunctionCode = "HR_CONF_EDUCATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 58,
                            ActionName = "Update",
                            ControllerName = "Education",
                            FunctionCode = "HR_CONF_EDUCATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 59,
                            ActionName = "Delete",
                            ControllerName = "Education",
                            FunctionCode = "HR_CONF_EDUCATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 60,
                            ActionName = "GetList",
                            ControllerName = "ProfessionalQualification",
                            FunctionCode = "HR_CONF_QUALIFICATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 61,
                            ActionName = "Insert",
                            ControllerName = "ProfessionalQualification",
                            FunctionCode = "HR_CONF_QUALIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 62,
                            ActionName = "Update",
                            ControllerName = "ProfessionalQualification",
                            FunctionCode = "HR_CONF_QUALIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 63,
                            ActionName = "Delete",
                            ControllerName = "ProfessionalQualification",
                            FunctionCode = "HR_CONF_QUALIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 64,
                            ActionName = "GetList",
                            ControllerName = "ModelOfStudy",
                            FunctionCode = "HR_CONF_MODEL_OF_STUDY",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 65,
                            ActionName = "Insert",
                            ControllerName = "ModelOfStudy",
                            FunctionCode = "HR_CONF_MODEL_OF_STUDY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 66,
                            ActionName = "Update",
                            ControllerName = "ModelOfStudy",
                            FunctionCode = "HR_CONF_MODEL_OF_STUDY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 67,
                            ActionName = "Delete",
                            ControllerName = "ModelOfStudy",
                            FunctionCode = "HR_CONF_MODEL_OF_STUDY",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 68,
                            ActionName = "GetList",
                            ControllerName = "Ranking",
                            FunctionCode = "HR_CONF_RANKING",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 69,
                            ActionName = "Insert",
                            ControllerName = "Ranking",
                            FunctionCode = "HR_CONF_RANKING",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 70,
                            ActionName = "Update",
                            ControllerName = "Ranking",
                            FunctionCode = "HR_CONF_RANKING",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 71,
                            ActionName = "Delete",
                            ControllerName = "Ranking",
                            FunctionCode = "HR_CONF_RANKING",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 72,
                            ActionName = "GetList",
                            ControllerName = "RelationshipType",
                            FunctionCode = "HR_CONF_RELATIONSHIP",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 73,
                            ActionName = "Insert",
                            ControllerName = "RelationshipType",
                            FunctionCode = "HR_CONF_RELATIONSHIP",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 74,
                            ActionName = "Update",
                            ControllerName = "RelationshipType",
                            FunctionCode = "HR_CONF_RELATIONSHIP",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 75,
                            ActionName = "Delete",
                            ControllerName = "RelationshipType",
                            FunctionCode = "HR_CONF_RELATIONSHIP",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 76,
                            ActionName = "GetList",
                            ControllerName = "ContractType",
                            FunctionCode = "HR_CONF_CONTRACT",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 77,
                            ActionName = "Insert",
                            ControllerName = "ContractType",
                            FunctionCode = "HR_CONF_CONTRACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 78,
                            ActionName = "Update",
                            ControllerName = "ContractType",
                            FunctionCode = "HR_CONF_CONTRACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 79,
                            ActionName = "Delete",
                            ControllerName = "ContractType",
                            FunctionCode = "HR_CONF_CONTRACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 80,
                            ActionName = "GetList",
                            ControllerName = "EmployeeWorkingStatus",
                            FunctionCode = "HR_CONF_WORKING",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 81,
                            ActionName = "Insert",
                            ControllerName = "EmployeeWorkingStatus",
                            FunctionCode = "HR_CONF_WORKING",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 82,
                            ActionName = "Update",
                            ControllerName = "EmployeeWorkingStatus",
                            FunctionCode = "HR_CONF_WORKING",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 83,
                            ActionName = "Delete",
                            ControllerName = "EmployeeWorkingStatus",
                            FunctionCode = "HR_CONF_WORKING",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 88,
                            ActionName = "GetList",
                            ControllerName = "ApproveStatus",
                            FunctionCode = "HR_CONF_APPROVE_ST",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 89,
                            ActionName = "Insert",
                            ControllerName = "ApproveStatus",
                            FunctionCode = "HR_CONF_APPROVE_ST",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 90,
                            ActionName = "Update",
                            ControllerName = "ApproveStatus",
                            FunctionCode = "HR_CONF_APPROVE_ST",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 91,
                            ActionName = "Delete",
                            ControllerName = "ApproveStatus",
                            FunctionCode = "HR_CONF_APPROVE_ST",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 134,
                            ActionName = "GetList",
                            ControllerName = "Major",
                            FunctionCode = "HR_CONF_MAJOR",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 135,
                            ActionName = "Insert",
                            ControllerName = "Major",
                            FunctionCode = "HR_CONF_MAJOR",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 136,
                            ActionName = "Update",
                            ControllerName = "Major",
                            FunctionCode = "HR_CONF_MAJOR",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 137,
                            ActionName = "Delete",
                            ControllerName = "Major",
                            FunctionCode = "HR_CONF_MAJOR",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 138,
                            ActionName = "GetList",
                            ControllerName = "School",
                            FunctionCode = "HR_CONF_SCHOOL",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 139,
                            ActionName = "Insert",
                            ControllerName = "School",
                            FunctionCode = "HR_CONF_SCHOOL",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 140,
                            ActionName = "Update",
                            ControllerName = "School",
                            FunctionCode = "HR_CONF_SCHOOL",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 141,
                            ActionName = "Delete",
                            ControllerName = "School",
                            FunctionCode = "HR_CONF_SCHOOL",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 142,
                            ActionName = "GetList",
                            ControllerName = "Certificated",
                            FunctionCode = "HR_CONF_CERTIFICATED",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 143,
                            ActionName = "Insert",
                            ControllerName = "Certificated",
                            FunctionCode = "HR_CONF_CERTIFICATED",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 144,
                            ActionName = "Update",
                            ControllerName = "Certificated",
                            FunctionCode = "HR_CONF_CERTIFICATED",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 145,
                            ActionName = "Delete",
                            ControllerName = "Certificated",
                            FunctionCode = "HR_CONF_CERTIFICATED",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 84,
                            ActionName = "GetList",
                            ControllerName = "Employee",
                            FunctionCode = "HR_EMPLOYEE",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 85,
                            ActionName = "Insert",
                            ControllerName = "Employee",
                            FunctionCode = "HR_EMPLOYEE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 86,
                            ActionName = "Update",
                            ControllerName = "Employee",
                            FunctionCode = "HR_EMPLOYEE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 87,
                            ActionName = "Delete",
                            ControllerName = "Employee",
                            FunctionCode = "HR_EMPLOYEE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 96,
                            ActionName = "item-by-employee",
                            ControllerName = "Employee",
                            FunctionCode = "HR_EMPLOYEE_PERSONAL_INFO",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 97,
                            ActionName = "Update",
                            ControllerName = "EmployeeInfo",
                            FunctionCode = "HR_EMPLOYEE_PERSONAL_INFO",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 98,
                            ActionName = "ItemByEmployee",
                            ControllerName = "EmployeeContact",
                            FunctionCode = "HR_EMPLOYEE_CONTACT",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 99,
                            ActionName = "Insert",
                            ControllerName = "EmployeeContact",
                            FunctionCode = "HR_EMPLOYEE_CONTACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 100,
                            ActionName = "Update",
                            ControllerName = "EmployeeContact",
                            FunctionCode = "HR_EMPLOYEE_CONTACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 101,
                            ActionName = "Delete",
                            ControllerName = "EmployeeContact",
                            FunctionCode = "HR_EMPLOYEE_CONTACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 102,
                            ActionName = "GetList",
                            ControllerName = "EmployeeEducation",
                            FunctionCode = "HR_EMPLOYEE_EDUCATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 103,
                            ActionName = "Insert",
                            ControllerName = "EmployeeEducation",
                            FunctionCode = "HR_EMPLOYEE_EDUCATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 104,
                            ActionName = "Update",
                            ControllerName = "EmployeeEducation",
                            FunctionCode = "HR_EMPLOYEE_EDUCATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 105,
                            ActionName = "Delete",
                            ControllerName = "EmployeeEducation",
                            FunctionCode = "HR_EMPLOYEE_EDUCATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 106,
                            ActionName = "GetList",
                            ControllerName = "EmployeeCertification",
                            FunctionCode = "HR_EMPLOYEE_CERTIFICATE",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 107,
                            ActionName = "Insert",
                            ControllerName = "EmployeeCertification",
                            FunctionCode = "HR_EMPLOYEE_CERTIFICATE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 108,
                            ActionName = "Update",
                            ControllerName = "EmployeeCertification",
                            FunctionCode = "HR_EMPLOYEE_CERTIFICATE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 109,
                            ActionName = "Delete",
                            ControllerName = "EmployeeCertification",
                            FunctionCode = "HR_EMPLOYEE_CERTIFICATE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 110,
                            ActionName = "GetList",
                            ControllerName = "EmployeeIdentification",
                            FunctionCode = "HR_EMPLOYEE_IDENTIFICATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 111,
                            ActionName = "Insert",
                            ControllerName = "EmployeeIdentification",
                            FunctionCode = "HR_EMPLOYEE_IDENTIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 112,
                            ActionName = "Update",
                            ControllerName = "EmployeeIdentification",
                            FunctionCode = "HR_EMPLOYEE_IDENTIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 113,
                            ActionName = "Delete",
                            ControllerName = "EmployeeIdentification",
                            FunctionCode = "HR_EMPLOYEE_IDENTIFICATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 114,
                            ActionName = "GetList",
                            ControllerName = "EmployeeBank",
                            FunctionCode = "HR_EMPLOYEE_BANK",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 115,
                            ActionName = "Insert",
                            ControllerName = "EmployeeBank",
                            FunctionCode = "HR_EMPLOYEE_BANK",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 116,
                            ActionName = "Update",
                            ControllerName = "EmployeeBank",
                            FunctionCode = "HR_EMPLOYEE_BANK",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 117,
                            ActionName = "Delete",
                            ControllerName = "EmployeeBank",
                            FunctionCode = "HR_EMPLOYEE_BANK",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 118,
                            ActionName = "GetList",
                            ControllerName = "EmployeeRelationship",
                            FunctionCode = "HR_EMPLOYEE_RELATIONSHIP",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 119,
                            ActionName = "Insert",
                            ControllerName = "EmployeeRelationship",
                            FunctionCode = "HR_EMPLOYEE_RELATIONSHIP",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 120,
                            ActionName = "Update",
                            ControllerName = "EmployeeRelationship",
                            FunctionCode = "HR_EMPLOYEE_RELATIONSHIP",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 121,
                            ActionName = "Delete",
                            ControllerName = "EmployeeRelationship",
                            FunctionCode = "HR_EMPLOYEE_RELATIONSHIP",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 122,
                            ActionName = "GetList",
                            ControllerName = "EmployeeContract",
                            FunctionCode = "HR_EMPLOYEE_CONTRACT",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 123,
                            ActionName = "Insert",
                            ControllerName = "EmployeeContract",
                            FunctionCode = "HR_EMPLOYEE_CONTRACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 124,
                            ActionName = "Update",
                            ControllerName = "EmployeeContract",
                            FunctionCode = "HR_EMPLOYEE_CONTRACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 125,
                            ActionName = "Delete",
                            ControllerName = "EmployeeContract",
                            FunctionCode = "HR_EMPLOYEE_CONTRACT",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 126,
                            ActionName = "GetList",
                            ControllerName = "EmployeeCommendation",
                            FunctionCode = "HR_EMPLOYEE_COMMENDATION",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 127,
                            ActionName = "Insert",
                            ControllerName = "EmployeeCommendation",
                            FunctionCode = "HR_EMPLOYEE_COMMENDATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 128,
                            ActionName = "Update",
                            ControllerName = "EmployeeCommendation",
                            FunctionCode = "HR_EMPLOYEE_COMMENDATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 129,
                            ActionName = "Delete",
                            ControllerName = "EmployeeCommendation",
                            FunctionCode = "HR_EMPLOYEE_COMMENDATION",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        },
                        new
                        {
                            Id = 130,
                            ActionName = "GetList",
                            ControllerName = "EmployeeDiscipline",
                            FunctionCode = "HR_EMPLOYEE_DISCIPLINE",
                            IsView = true,
                            ModuleName = "HR",
                            Name = "VIEW",
                            Precedence = 1
                        },
                        new
                        {
                            Id = 131,
                            ActionName = "Insert",
                            ControllerName = "EmployeeDiscipline",
                            FunctionCode = "HR_EMPLOYEE_DISCIPLINE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "INSERT",
                            Precedence = 2
                        },
                        new
                        {
                            Id = 132,
                            ActionName = "Update",
                            ControllerName = "EmployeeDiscipline",
                            FunctionCode = "HR_EMPLOYEE_DISCIPLINE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "UPDATE",
                            Precedence = 3
                        },
                        new
                        {
                            Id = 133,
                            ActionName = "Delete",
                            ControllerName = "EmployeeDiscipline",
                            FunctionCode = "HR_EMPLOYEE_DISCIPLINE",
                            IsView = false,
                            ModuleName = "HR",
                            Name = "DELETE",
                            Precedence = 4
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.Module", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ParentCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Url")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Code");

                    b.ToTable("Security_Module");

                    b.HasData(
                        new
                        {
                            Code = "DASHBOARD",
                            Icon = "",
                            Name = "DASHBOARD",
                            ParentCode = "",
                            Precedence = 1,
                            Url = "/dashboard"
                        },
                        new
                        {
                            Code = "HR",
                            Icon = "",
                            Name = "HR",
                            ParentCode = "",
                            Precedence = 2,
                            Url = "/hr"
                        },
                        new
                        {
                            Code = "SYSTEM",
                            Icon = "",
                            Name = "SYSTEM",
                            ParentCode = "",
                            Precedence = 5,
                            Url = "/system"
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Security_Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 1,
                            CreateDate = new DateTime(2020, 11, 11, 7, 11, 38, 531, DateTimeKind.Local).AddTicks(4550),
                            Deleted = false,
                            Description = "Sys",
                            IsActive = true,
                            Name = "Sys"
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.RoleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("RoleId");

                    b.ToTable("Security_RoleDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommandId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CommandId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CommandId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CommandId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CommandId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            CommandId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            CommandId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            CommandId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            CommandId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            CommandId = 11,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.SessionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("IPAddress")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsOnline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("LoginTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OSName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Platform")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Security_SessionLog");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.SystemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Secutiry_SystemLog");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Security_User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateBy = 0,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            EmployeeId = 1,
                            IsActive = false,
                            Password = "NTZFMjNDNTNCNjVFMjdGMjM3NDIyOTkwRTI5MjJFNzA0RkE2MTJBQzQ3OEE3NjA4NUI5QkQxMTU1OTBDNTgyMw==",
                            UserName = "sysadmin"
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.UserModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModuleCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleCode");

                    b.HasIndex("UserId");

                    b.ToTable("Security_UserModule");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Security_UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.Appraise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_Appraise");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.AppraiseAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppraiseQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_AppraiseAnswer");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.AppraiseQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppraiseSectionId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsInputAnswer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_AppraiseQuestion");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.AppraiseSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppraiseId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_AppraiseSection");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsWorkInCenter")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("TrainingCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_Lecturer");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.SpecializedTraining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_SpecializedTraining");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.TrainingCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_TrainingCenter");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.TrainingCenterContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int>("TrainingCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_TrainingCenterContact");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.TrainingCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CompleteDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_TrainingCourse");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.TrainingCourseDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int>("TrainingCourseId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_TrainingCourseDocument");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Training.TrainingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Precedence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Training_TrainingType");
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.Function", b =>
                {
                    b.HasOne("Database.Sql.ERP.Entities.Security.Module", "Module")
                        .WithMany("Functions")
                        .HasForeignKey("ModuleCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.FunctionCommand", b =>
                {
                    b.HasOne("Database.Sql.ERP.Entities.Security.Function", "Function")
                        .WithMany("Commands")
                        .HasForeignKey("FunctionCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.RoleDetail", b =>
                {
                    b.HasOne("Database.Sql.ERP.Entities.Security.FunctionCommand", "FunctionCommand")
                        .WithMany("RoleDetails")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Sql.ERP.Entities.Security.Role", "Role")
                        .WithMany("Details")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.UserModule", b =>
                {
                    b.HasOne("Database.Sql.ERP.Entities.Security.Module", "Module")
                        .WithMany("UserModules")
                        .HasForeignKey("ModuleCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Database.Sql.ERP.Entities.Security.User", "User")
                        .WithMany("UserModules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Sql.ERP.Entities.Security.UserRole", b =>
                {
                    b.HasOne("Database.Sql.ERP.Entities.Security.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Sql.ERP.Entities.Security.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
